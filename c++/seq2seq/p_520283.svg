<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="374" onload="init(evt)" viewBox="0 0 1200 374" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="374.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="357" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="357" > </text>
<g id="frames">
<g >
<title>allocTmpMatrix (65,599,610 samples, 0.01%)</title><rect x="1090.5" y="277" width="0.1" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1093.46" y="287.5" ></text>
</g>
<g >
<title>do_syscall_64 (215,926,287 samples, 0.03%)</title><rect x="1044.2" y="245" width="0.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1047.19" y="255.5" ></text>
</g>
<g >
<title>[unknown] (15,761,701,888 samples, 2.32%)</title><rect x="1049.6" y="261" width="27.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1052.56" y="271.5" >[..</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (350,077,498 samples, 0.05%)</title><rect x="893.7" y="277" width="0.6" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="896.67" y="287.5" ></text>
</g>
<g >
<title>seq2seq (677,993,288,805 samples, 100.00%)</title><rect x="10.0" y="309" width="1180.0" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="13.00" y="319.5" >seq2seq</text>
</g>
<g >
<title>hrtimer_interrupt (86,685,494 samples, 0.01%)</title><rect x="1118.9" y="213" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1121.89" y="223.5" ></text>
</g>
<g >
<title>schedule (96,529,899 samples, 0.01%)</title><rect x="894.4" y="197" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="897.44" y="207.5" ></text>
</g>
<g >
<title>autograd::CrossEntropyLossMask (27,852,393,289 samples, 4.11%)</title><rect x="1141.0" y="293" width="48.5" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1144.02" y="303.5" >auto..</text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (86,685,494 samples, 0.01%)</title><rect x="1118.9" y="245" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1121.89" y="255.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (62,993,334 samples, 0.01%)</title><rect x="1043.6" y="261" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1046.58" y="271.5" ></text>
</g>
<g >
<title>futex_wait (63,237,688 samples, 0.01%)</title><rect x="1044.4" y="181" width="0.1" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1047.40" y="191.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (96,529,899 samples, 0.01%)</title><rect x="894.4" y="229" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="897.44" y="239.5" ></text>
</g>
<g >
<title>insert_work (64,422,325 samples, 0.01%)</title><rect x="894.1" y="69" width="0.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="897.05" y="79.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (65,164,958 samples, 0.01%)</title><rect x="1048.4" y="229" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1051.38" y="239.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (68,352,864 samples, 0.01%)</title><rect x="947.3" y="229" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="950.33" y="239.5" ></text>
</g>
<g >
<title>Matrix::expand_add (479,702,081 samples, 0.07%)</title><rect x="894.8" y="293" width="0.9" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="897.83" y="303.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (189,442,431 samples, 0.03%)</title><rect x="893.7" y="213" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="896.67" y="223.5" ></text>
</g>
<g >
<title>queue_work_on (95,302,760 samples, 0.01%)</title><rect x="894.3" y="165" width="0.1" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="897.27" y="175.5" ></text>
</g>
<g >
<title>__expm1f (1,019,628,438 samples, 0.15%)</title><rect x="1137.5" y="293" width="1.8" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="1140.51" y="303.5" ></text>
</g>
<g >
<title>Matrix::operator[] (1,967,459,480 samples, 0.29%)</title><rect x="1049.8" y="213" width="3.5" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1052.84" y="223.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (221,301,893 samples, 0.03%)</title><rect x="893.7" y="245" width="0.4" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="896.67" y="255.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (63,237,688 samples, 0.01%)</title><rect x="1044.4" y="165" width="0.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1047.40" y="175.5" ></text>
</g>
<g >
<title>irq_work_run (64,422,325 samples, 0.01%)</title><rect x="894.1" y="165" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="897.05" y="175.5" ></text>
</g>
<g >
<title>queue_work_on (64,422,325 samples, 0.01%)</title><rect x="894.1" y="101" width="0.1" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="897.05" y="111.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (68,352,864 samples, 0.01%)</title><rect x="947.3" y="245" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="950.33" y="255.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (369,763,058 samples, 0.05%)</title><rect x="1044.7" y="261" width="0.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1047.67" y="271.5" ></text>
</g>
<g >
<title>__tanhf (256,538,665 samples, 0.04%)</title><rect x="1139.3" y="293" width="0.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1142.28" y="303.5" ></text>
</g>
<g >
<title>try_to_wake_up (63,086,459 samples, 0.01%)</title><rect x="894.3" y="101" width="0.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="897.33" y="111.5" ></text>
</g>
<g >
<title>Matrix::sigmoid_prime (343,775,645 samples, 0.05%)</title><rect x="951.2" y="277" width="0.6" height="15.0" fill="rgb(210,25,5)" rx="2" ry="2" />
<text  x="954.16" y="287.5" ></text>
</g>
<g >
<title>[unknown] (15,400,386,248 samples, 2.27%)</title><rect x="1049.8" y="245" width="26.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1052.84" y="255.5" >[..</text>
</g>
<g >
<title>do_futex (149,002,228 samples, 0.02%)</title><rect x="1044.2" y="197" width="0.3" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1047.25" y="207.5" ></text>
</g>
<g >
<title>dbs_irq_work (95,302,760 samples, 0.01%)</title><rect x="894.3" y="181" width="0.1" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="897.27" y="191.5" ></text>
</g>
<g >
<title>pow@@GLIBC_2.29 (950,008,970 samples, 0.14%)</title><rect x="1075.0" y="213" width="1.6" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1077.99" y="223.5" ></text>
</g>
<g >
<title>[libm-2.31.so] (175,724,884 samples, 0.03%)</title><rect x="1053.3" y="213" width="0.3" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="1056.27" y="223.5" ></text>
</g>
<g >
<title>autograd::Parameters::require_grad (280,809,941 samples, 0.04%)</title><rect x="1074.4" y="213" width="0.5" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="1077.44" y="223.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (350,077,498 samples, 0.05%)</title><rect x="893.7" y="261" width="0.6" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="896.67" y="271.5" ></text>
</g>
<g >
<title>autograd::cat0 (1,421,549,973 samples, 0.21%)</title><rect x="1078.3" y="261" width="2.4" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1081.26" y="271.5" ></text>
</g>
<g >
<title>[unknown] (21,187,329,742 samples, 3.13%)</title><rect x="1045.3" y="277" width="36.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1048.31" y="287.5" >[un..</text>
</g>
<g >
<title>autograd::Parameters::get_grad (66,978,460 samples, 0.01%)</title><rect x="1076.6" y="245" width="0.2" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="1079.65" y="255.5" ></text>
</g>
<g >
<title>wake_up_process (63,086,459 samples, 0.01%)</title><rect x="894.3" y="117" width="0.1" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="897.33" y="127.5" ></text>
</g>
<g >
<title>all (677,993,288,805 samples, 100%)</title><rect x="10.0" y="325" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="335.5" ></text>
</g>
<g >
<title>update_process_times (59,607,136 samples, 0.01%)</title><rect x="1118.9" y="149" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1121.89" y="159.5" ></text>
</g>
<g >
<title>Matrix::operator[] (6,421,864,311 samples, 0.95%)</title><rect x="904.4" y="293" width="11.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="907.40" y="303.5" ></text>
</g>
<g >
<title>irq_exit_rcu (95,914,846 samples, 0.01%)</title><rect x="894.1" y="245" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="897.05" y="255.5" ></text>
</g>
<g >
<title>[libgomp.so.1.0.0] (64,447,203 samples, 0.01%)</title><rect x="947.5" y="261" width="0.1" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="950.51" y="271.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (221,301,893 samples, 0.03%)</title><rect x="893.7" y="229" width="0.4" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="896.67" y="239.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (68,488,321 samples, 0.01%)</title><rect x="947.3" y="261" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="950.33" y="271.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (64,447,203 samples, 0.01%)</title><rect x="947.5" y="245" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="950.51" y="255.5" ></text>
</g>
<g >
<title>irq_work_run_list (95,302,760 samples, 0.01%)</title><rect x="894.3" y="213" width="0.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="897.27" y="223.5" ></text>
</g>
<g >
<title>autograd::Adam::clip_grad (843,572,253 samples, 0.12%)</title><rect x="1090.6" y="277" width="1.4" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1093.58" y="287.5" ></text>
</g>
<g >
<title>[libgomp.so.1.0.0] (17,958,475,295 samples, 2.65%)</title><rect x="916.2" y="293" width="31.3" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="919.20" y="303.5" >[l..</text>
</g>
<g >
<title>Matrix::operator+= (60,479,154 samples, 0.01%)</title><rect x="949.2" y="277" width="0.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="952.21" y="287.5" ></text>
</g>
<g >
<title>tick_sched_handle.isra.0 (59,607,136 samples, 0.01%)</title><rect x="1118.9" y="165" width="0.1" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1121.89" y="175.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (125,679,625 samples, 0.02%)</title><rect x="1078.0" y="261" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1080.99" y="271.5" ></text>
</g>
<g >
<title>__x64_sys_futex (149,002,228 samples, 0.02%)</title><rect x="1044.2" y="213" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1047.25" y="223.5" ></text>
</g>
<g >
<title>scheduler_tick (189,442,431 samples, 0.03%)</title><rect x="893.7" y="149" width="0.3" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="896.67" y="159.5" ></text>
</g>
<g >
<title>Matrix::operator+= (4,462,036,514 samples, 0.66%)</title><rect x="896.6" y="293" width="7.8" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="899.64" y="303.5" ></text>
</g>
<g >
<title>[libgomp.so.1.0.0] (2,406,658,314 samples, 0.35%)</title><rect x="1045.4" y="245" width="4.2" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1048.37" y="255.5" ></text>
</g>
<g >
<title>dbs_irq_work (64,422,325 samples, 0.01%)</title><rect x="894.1" y="117" width="0.1" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="897.05" y="127.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (86,685,494 samples, 0.01%)</title><rect x="1118.9" y="229" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1121.89" y="239.5" ></text>
</g>
<g >
<title>_int_free (105,530,084 samples, 0.02%)</title><rect x="1090.3" y="277" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1093.28" y="287.5" ></text>
</g>
<g >
<title>omp_get_num_threads (832,156,721 samples, 0.12%)</title><rect x="1080.7" y="261" width="1.5" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1083.74" y="271.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (572,238,585 samples, 0.08%)</title><rect x="1077.0" y="261" width="1.0" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1079.99" y="271.5" ></text>
</g>
<g >
<title>arch_scale_freq_tick (64,429,699 samples, 0.01%)</title><rect x="893.7" y="133" width="0.1" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="896.67" y="143.5" ></text>
</g>
<g >
<title>__expf_fma (2,126,607,012 samples, 0.31%)</title><rect x="1082.2" y="277" width="3.7" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1085.21" y="287.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (59,607,136 samples, 0.01%)</title><rect x="1118.9" y="197" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1121.89" y="207.5" ></text>
</g>
<g >
<title>__ieee754_pow_fma (5,308,907,048 samples, 0.78%)</title><rect x="1054.0" y="213" width="9.2" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1057.01" y="223.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (86,685,494 samples, 0.01%)</title><rect x="1118.9" y="261" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1121.89" y="271.5" ></text>
</g>
<g >
<title>autograd::Adam::step (6,397,643,252 samples, 0.94%)</title><rect x="1063.3" y="213" width="11.1" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="1066.31" y="223.5" ></text>
</g>
<g >
<title>__sysvec_irq_work (95,302,760 samples, 0.01%)</title><rect x="894.3" y="245" width="0.1" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="897.27" y="255.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (224,391,978 samples, 0.03%)</title><rect x="1089.8" y="261" width="0.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1092.79" y="271.5" ></text>
</g>
<g >
<title>__sched_text_start (63,237,688 samples, 0.01%)</title><rect x="1044.4" y="133" width="0.1" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1047.40" y="143.5" ></text>
</g>
<g >
<title>Matrix::at (508,397,337,368 samples, 74.99%)</title><rect x="10.0" y="293" width="884.8" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="13.00" y="303.5" >Matrix::at</text>
</g>
<g >
<title>irqentry_exit (96,529,899 samples, 0.01%)</title><rect x="894.4" y="245" width="0.2" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="897.44" y="255.5" ></text>
</g>
<g >
<title>Matrix::getShape (109,446,695 samples, 0.02%)</title><rect x="947.7" y="277" width="0.2" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="950.68" y="287.5" ></text>
</g>
<g >
<title>Matrix::getShape (175,233,244 samples, 0.03%)</title><rect x="895.7" y="293" width="0.3" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="898.66" y="303.5" ></text>
</g>
<g >
<title>[libgomp.so.1.0.0] (130,874,424 samples, 0.02%)</title><rect x="1049.6" y="245" width="0.2" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1052.62" y="255.5" ></text>
</g>
<g >
<title>__queue_work (64,422,325 samples, 0.01%)</title><rect x="894.1" y="85" width="0.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="897.05" y="95.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (2,034,326,884 samples, 0.30%)</title><rect x="1086.6" y="277" width="3.6" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1089.64" y="287.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (417,828,500 samples, 0.06%)</title><rect x="1085.9" y="277" width="0.7" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1088.91" y="287.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (58,571,425 samples, 0.01%)</title><rect x="1090.2" y="277" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1093.18" y="287.5" ></text>
</g>
<g >
<title>tick_sched_timer (68,352,864 samples, 0.01%)</title><rect x="947.3" y="197" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="950.33" y="207.5" ></text>
</g>
<g >
<title>schedule (63,237,688 samples, 0.01%)</title><rect x="1044.4" y="149" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1047.40" y="159.5" ></text>
</g>
<g >
<title>try_to_wake_up (64,422,325 samples, 0.01%)</title><rect x="894.1" y="37" width="0.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="897.05" y="47.5" ></text>
</g>
<g >
<title>__expf_fma (10,506,397,303 samples, 1.55%)</title><rect x="1119.2" y="293" width="18.3" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1122.22" y="303.5" ></text>
</g>
<g >
<title>Matrix::transpose (5,737,740,734 samples, 0.85%)</title><rect x="951.9" y="277" width="10.0" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="954.92" y="287.5" ></text>
</g>
<g >
<title>handle_softirqs (64,422,325 samples, 0.01%)</title><rect x="894.1" y="229" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="897.05" y="239.5" ></text>
</g>
<g >
<title>Matrix::tanh (96,638,822 samples, 0.01%)</title><rect x="916.0" y="293" width="0.2" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="919.03" y="303.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (68,352,864 samples, 0.01%)</title><rect x="947.3" y="213" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="950.33" y="223.5" ></text>
</g>
<g >
<title>Matrix::tanh_prime (64,422,426 samples, 0.01%)</title><rect x="951.8" y="277" width="0.1" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="954.80" y="287.5" ></text>
</g>
<g >
<title>sysvec_irq_work (224,039,736 samples, 0.03%)</title><rect x="894.3" y="261" width="0.4" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="897.27" y="271.5" ></text>
</g>
<g >
<title>Matrix::sum (193,193,971 samples, 0.03%)</title><rect x="915.7" y="293" width="0.3" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="918.69" y="303.5" ></text>
</g>
<g >
<title>_int_malloc (64,214,749 samples, 0.01%)</title><rect x="1139.7" y="293" width="0.1" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1142.73" y="303.5" ></text>
</g>
<g >
<title>__queue_work (95,302,760 samples, 0.01%)</title><rect x="894.3" y="149" width="0.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="897.27" y="159.5" ></text>
</g>
<g >
<title>unlink_chunk.isra.0 (58,249,923 samples, 0.01%)</title><rect x="1189.9" y="293" width="0.1" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1192.90" y="303.5" ></text>
</g>
<g >
<title>irq_work_single (64,422,325 samples, 0.01%)</title><rect x="894.1" y="133" width="0.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="897.05" y="143.5" ></text>
</g>
<g >
<title>task_tick_fair (63,126,767 samples, 0.01%)</title><rect x="893.9" y="133" width="0.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="896.89" y="143.5" ></text>
</g>
<g >
<title>update_process_times (189,442,431 samples, 0.03%)</title><rect x="893.7" y="165" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="896.67" y="175.5" ></text>
</g>
<g >
<title>[unknown] (98,660,913,545 samples, 14.55%)</title><rect x="947.5" y="293" width="171.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="950.51" y="303.5" >[unknown]</text>
</g>
<g >
<title>__sched_text_start (96,529,899 samples, 0.01%)</title><rect x="894.4" y="181" width="0.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="897.44" y="191.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (165,095,083 samples, 0.02%)</title><rect x="947.2" y="277" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="950.16" y="287.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_safe_stack (60,693,901 samples, 0.01%)</title><rect x="1044.6" y="261" width="0.1" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1047.56" y="271.5" ></text>
</g>
<g >
<title>[seq2seq] (246,001,710 samples, 0.04%)</title><rect x="1053.6" y="213" width="0.4" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="1056.57" y="223.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (614,389,022 samples, 0.09%)</title><rect x="1048.5" y="229" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1051.49" y="239.5" ></text>
</g>
<g >
<title>Matrix::sigmoid (64,521,405 samples, 0.01%)</title><rect x="915.6" y="293" width="0.1" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="918.58" y="303.5" ></text>
</g>
<g >
<title>autograd::CrossEntropyMaskEdge::backward (15,476,547,871 samples, 2.28%)</title><rect x="1092.1" y="277" width="26.9" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="1095.10" y="287.5" >a..</text>
</g>
<g >
<title>irq_work_run_list (64,422,325 samples, 0.01%)</title><rect x="894.1" y="149" width="0.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="897.05" y="159.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (247,896,733 samples, 0.04%)</title><rect x="1044.1" y="261" width="0.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1047.13" y="271.5" ></text>
</g>
<g >
<title>perf_event_task_tick (61,885,965 samples, 0.01%)</title><rect x="893.8" y="133" width="0.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="896.78" y="143.5" ></text>
</g>
<g >
<title>Matrix::operator*= (382,742,210 samples, 0.06%)</title><rect x="896.0" y="293" width="0.6" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="898.97" y="303.5" ></text>
</g>
<g >
<title>tick_sched_timer (59,607,136 samples, 0.01%)</title><rect x="1118.9" y="181" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1121.89" y="191.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (98,746,080 samples, 0.01%)</title><rect x="1048.2" y="229" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1051.21" y="239.5" ></text>
</g>
<g >
<title>x64_sys_call (211,848,780 samples, 0.03%)</title><rect x="1044.2" y="229" width="0.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1047.19" y="239.5" ></text>
</g>
<g >
<title>irq_work_single (95,302,760 samples, 0.01%)</title><rect x="894.3" y="197" width="0.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="897.27" y="207.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (218,557,200 samples, 0.03%)</title><rect x="1043.7" y="261" width="0.4" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1046.75" y="271.5" ></text>
</g>
<g >
<title>autograd::Parameters::require_grad (100,329,443 samples, 0.01%)</title><rect x="1076.8" y="245" width="0.1" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="1079.76" y="255.5" ></text>
</g>
<g >
<title>asm_sysvec_irq_work (64,422,325 samples, 0.01%)</title><rect x="894.1" y="213" width="0.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="897.05" y="223.5" ></text>
</g>
<g >
<title>Matrix::operator* (708,608,746 samples, 0.10%)</title><rect x="947.9" y="277" width="1.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="950.87" y="287.5" ></text>
</g>
<g >
<title>tick_sched_handle.isra.0 (189,442,431 samples, 0.03%)</title><rect x="893.7" y="181" width="0.3" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="896.67" y="191.5" ></text>
</g>
<g >
<title>Matrix::operator[] (1,059,666,360 samples, 0.16%)</title><rect x="949.3" y="277" width="1.9" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="952.31" y="287.5" ></text>
</g>
<g >
<title>Matrix::operator+ (60,314,775 samples, 0.01%)</title><rect x="949.1" y="277" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="952.10" y="287.5" ></text>
</g>
<g >
<title>GOMP_parallel (2,441,791,894 samples, 0.36%)</title><rect x="1045.3" y="261" width="4.3" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1048.31" y="271.5" ></text>
</g>
<g >
<title>__sysvec_irq_work (64,422,325 samples, 0.01%)</title><rect x="894.1" y="181" width="0.1" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="897.05" y="191.5" ></text>
</g>
<g >
<title>insert_work (63,086,459 samples, 0.01%)</title><rect x="894.3" y="133" width="0.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="897.33" y="143.5" ></text>
</g>
<g >
<title>autograd::CatEdge0::backward (643,061,500 samples, 0.09%)</title><rect x="1139.9" y="293" width="1.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1142.90" y="303.5" ></text>
</g>
<g >
<title>irq_work_run (95,302,760 samples, 0.01%)</title><rect x="894.3" y="229" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="897.27" y="239.5" ></text>
</g>
<g >
<title>error_entry (62,710,529 samples, 0.01%)</title><rect x="894.7" y="277" width="0.1" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="897.66" y="287.5" ></text>
</g>
<g >
<title>Matrix::at (64,447,203 samples, 0.01%)</title><rect x="947.5" y="277" width="0.1" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="950.51" y="287.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (96,529,899 samples, 0.01%)</title><rect x="894.4" y="213" width="0.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="897.44" y="223.5" ></text>
</g>
<g >
<title>sysvec_irq_work (64,422,325 samples, 0.01%)</title><rect x="894.1" y="197" width="0.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="897.05" y="207.5" ></text>
</g>
<g >
<title>asm_sysvec_irq_work (224,039,736 samples, 0.03%)</title><rect x="894.3" y="277" width="0.4" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="897.27" y="287.5" ></text>
</g>
<g >
<title>[libgomp.so.1.0.0] (47,923,699,080 samples, 7.07%)</title><rect x="961.9" y="277" width="83.4" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="964.90" y="287.5" >[libgomp...</text>
</g>
<g >
<title>tick_sched_timer (189,442,431 samples, 0.03%)</title><rect x="893.7" y="197" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="896.67" y="207.5" ></text>
</g>
<g >
<title>[unknown] (15,400,386,248 samples, 2.27%)</title><rect x="1049.8" y="229" width="26.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1052.84" y="239.5" >[..</text>
</g>
<g >
<title>autograd::Dropout::forward (194,064,599 samples, 0.03%)</title><rect x="1189.5" y="293" width="0.3" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1192.49" y="303.5" ></text>
</g>
<g >
<title>wake_up_process (64,422,325 samples, 0.01%)</title><rect x="894.1" y="53" width="0.1" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="897.05" y="63.5" ></text>
</g>
</g>
</svg>
