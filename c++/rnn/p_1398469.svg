<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="758" onload="init(evt)" viewBox="0 0 1200 758" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="758.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="741" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="741" > </text>
<g id="frames">
<g >
<title>join_hiddens (515,425,675 samples, 0.13%)</title><rect x="1174.1" y="613" width="1.6" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1177.11" y="623.5" ></text>
</g>
<g >
<title>xflow (96,638,786 samples, 0.03%)</title><rect x="1014.5" y="613" width="0.3" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1017.49" y="623.5" ></text>
</g>
<g >
<title>__expm1 (708,735,643 samples, 0.18%)</title><rect x="1170.9" y="597" width="2.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1173.95" y="607.5" ></text>
</g>
<g >
<title>Matrix::operator[] (257,692,158 samples, 0.07%)</title><rect x="1040.5" y="565" width="0.8" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1043.47" y="575.5" ></text>
</g>
<g >
<title>__asan::AsanTSDGet (96,635,594 samples, 0.03%)</title><rect x="975.6" y="661" width="0.3" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="978.61" y="671.5" ></text>
</g>
<g >
<title>operator new[] (64,414,350 samples, 0.02%)</title><rect x="1028.3" y="549" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1031.34" y="559.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (64,415,501 samples, 0.02%)</title><rect x="1027.8" y="533" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1030.84" y="543.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned int&gt; (1,127,357,281 samples, 0.29%)</title><rect x="1149.6" y="581" width="3.5" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1152.62" y="591.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotPut (64,407,306 samples, 0.02%)</title><rect x="988.0" y="661" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="990.97" y="671.5" ></text>
</g>
<g >
<title>[unknown] (257,616,090 samples, 0.07%)</title><rect x="972.6" y="613" width="0.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="975.64" y="623.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (96,623,907 samples, 0.03%)</title><rect x="1162.5" y="565" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1165.55" y="575.5" ></text>
</g>
<g >
<title>Matrix::transpose (11,988,082,511 samples, 3.12%)</title><rect x="1045.3" y="597" width="36.8" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1048.31" y="607.5" >Mat..</text>
</g>
<g >
<title>Matrix::Matrix (257,692,234 samples, 0.07%)</title><rect x="1163.8" y="565" width="0.8" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1166.83" y="575.5" ></text>
</g>
<g >
<title>[libgomp.so.1.0.0] (3,285,306,074 samples, 0.85%)</title><rect x="962.0" y="629" width="10.0" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="964.96" y="639.5" ></text>
</g>
<g >
<title>__memmove_sse2_unaligned_erms (64,442,609 samples, 0.02%)</title><rect x="1041.4" y="517" width="0.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1044.36" y="527.5" ></text>
</g>
<g >
<title>with_errno.constprop.0 (64,415,005 samples, 0.02%)</title><rect x="1014.3" y="613" width="0.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1017.29" y="623.5" ></text>
</g>
<g >
<title>Matrix::checkShape (96,649,466 samples, 0.03%)</title><rect x="1174.7" y="597" width="0.3" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1177.71" y="607.5" ></text>
</g>
<g >
<title>[libgomp.so.1.0.0] (193,279,009 samples, 0.05%)</title><rect x="972.0" y="629" width="0.6" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="975.05" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;Matrix*, std::allocator&lt;Matrix*&gt; &gt;::push_back (64,414,799 samples, 0.02%)</title><rect x="1029.5" y="565" width="0.2" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="1032.52" y="575.5" ></text>
</g>
<g >
<title>[unknown] (128,807,203 samples, 0.03%)</title><rect x="972.6" y="117" width="0.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="975.64" y="127.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (96,632,601 samples, 0.03%)</title><rect x="1182.2" y="613" width="0.3" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="1185.19" y="623.5" ></text>
</g>
<g >
<title>operator- (386,499,086 samples, 0.10%)</title><rect x="1044.1" y="581" width="1.2" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="1047.13" y="591.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (1,028,240,590 samples, 0.27%)</title><rect x="898.2" y="645" width="3.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="901.18" y="655.5" ></text>
</g>
<g >
<title>Matrix::Matrix (128,845,107 samples, 0.03%)</title><rect x="1170.4" y="549" width="0.4" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1173.36" y="559.5" ></text>
</g>
<g >
<title>Matrix::operator[] (96,624,432 samples, 0.03%)</title><rect x="1161.5" y="597" width="0.3" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1164.46" y="607.5" ></text>
</g>
<g >
<title>__asan::asan_memalign (64,412,257 samples, 0.02%)</title><rect x="996.5" y="677" width="0.2" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="999.49" y="687.5" ></text>
</g>
<g >
<title>allocTmpMatrix (778,544,602 samples, 0.20%)</title><rect x="1079.7" y="581" width="2.4" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1082.72" y="591.5" ></text>
</g>
<g >
<title>Matrix::operator[] (386,579,165 samples, 0.10%)</title><rect x="1169.2" y="581" width="1.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1172.17" y="591.5" ></text>
</g>
<g >
<title>__asan::Allocator::Allocate (1,646,299,873 samples, 0.43%)</title><rect x="989.1" y="677" width="5.0" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="992.06" y="687.5" ></text>
</g>
<g >
<title>Matrix::dot (612,011,907 samples, 0.16%)</title><rect x="1163.1" y="597" width="1.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1166.14" y="607.5" ></text>
</g>
<g >
<title>pow@@GLIBC_2.29 (64,409,648 samples, 0.02%)</title><rect x="1038.5" y="565" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1041.49" y="575.5" ></text>
</g>
<g >
<title>Matrix::operator[] (7,827,209,409 samples, 2.04%)</title><rect x="1055.7" y="581" width="24.0" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1058.70" y="591.5" >M..</text>
</g>
<g >
<title>Matrix::Matrix (322,129,072 samples, 0.08%)</title><rect x="1027.5" y="565" width="1.0" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1030.55" y="575.5" ></text>
</g>
<g >
<title>__interceptor_memcpy.part.0 (64,394,523 samples, 0.02%)</title><rect x="1170.6" y="533" width="0.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1173.55" y="543.5" ></text>
</g>
<g >
<title>do_syscall_64 (193,278,210 samples, 0.05%)</title><rect x="967.1" y="597" width="0.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="970.11" y="607.5" ></text>
</g>
<g >
<title>__tanh (64,457,198 samples, 0.02%)</title><rect x="1173.2" y="597" width="0.2" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="1176.22" y="607.5" ></text>
</g>
<g >
<title>Matrix::operator[] (161,033,481 samples, 0.04%)</title><rect x="1036.4" y="565" width="0.4" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1039.35" y="575.5" ></text>
</g>
<g >
<title>[unknown] (128,807,203 samples, 0.03%)</title><rect x="972.6" y="149" width="0.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="975.64" y="159.5" ></text>
</g>
<g >
<title>do_futex (224,958,669 samples, 0.06%)</title><rect x="896.7" y="581" width="0.7" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="899.71" y="591.5" ></text>
</g>
<g >
<title>handle_softirqs (32,738,729 samples, 0.01%)</title><rect x="894.3" y="597" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="897.35" y="607.5" ></text>
</g>
<g >
<title>allocTmpMatrix (128,871,541 samples, 0.03%)</title><rect x="1038.1" y="565" width="0.4" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1041.09" y="575.5" ></text>
</g>
<g >
<title>Rnn::forward (3,994,152,590 samples, 1.04%)</title><rect x="1161.9" y="613" width="12.2" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="1164.85" y="623.5" ></text>
</g>
<g >
<title>get_futex_key (64,345,505 samples, 0.02%)</title><rect x="897.0" y="549" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="900.00" y="559.5" ></text>
</g>
<g >
<title>__asan::Allocator::Allocate (386,554,661 samples, 0.10%)</title><rect x="973.6" y="661" width="1.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="976.63" y="671.5" ></text>
</g>
<g >
<title>Matrix::operator+= (676,452,630 samples, 0.18%)</title><rect x="1031.6" y="597" width="2.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1034.60" y="607.5" ></text>
</g>
<g >
<title>Matrix::operator[] (128,853,046 samples, 0.03%)</title><rect x="1044.5" y="565" width="0.4" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1047.52" y="575.5" ></text>
</g>
<g >
<title>freeTmpMatrix (2,275,405,578 samples, 0.59%)</title><rect x="1176.6" y="629" width="7.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1179.59" y="639.5" ></text>
</g>
<g >
<title>[unknown] (257,616,090 samples, 0.07%)</title><rect x="972.6" y="629" width="0.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="975.64" y="639.5" ></text>
</g>
<g >
<title>[unknown] (225,414,485 samples, 0.06%)</title><rect x="972.6" y="341" width="0.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="975.64" y="351.5" ></text>
</g>
<g >
<title>[unknown] (225,414,485 samples, 0.06%)</title><rect x="972.6" y="309" width="0.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="975.64" y="319.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotBase&lt;__sanitizer::StackDepotNode, 1, 20&gt;::Put (708,643,675 samples, 0.18%)</title><rect x="985.8" y="661" width="2.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="988.80" y="671.5" ></text>
</g>
<g >
<title>Rnn::backward (41,245,497,355 samples, 10.73%)</title><rect x="1026.8" y="613" width="126.6" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1029.76" y="623.5" >Rnn::backward</text>
</g>
<g >
<title>allocTmpMatrix (708,592,635 samples, 0.18%)</title><rect x="1027.5" y="581" width="2.2" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1030.55" y="591.5" ></text>
</g>
<g >
<title>__expm1 (740,850,315 samples, 0.19%)</title><rect x="1041.6" y="581" width="2.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1044.55" y="591.5" ></text>
</g>
<g >
<title>[unknown] (161,006,280 samples, 0.04%)</title><rect x="972.6" y="197" width="0.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="975.64" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;Matrix*&gt;::construct&lt;Matrix*, Matrix* const&amp;&gt; (64,398,057 samples, 0.02%)</title><rect x="1173.7" y="565" width="0.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1176.72" y="575.5" ></text>
</g>
<g >
<title>__ieee754_pow_fma (406,619,808 samples, 0.11%)</title><rect x="1036.8" y="565" width="1.3" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1039.85" y="575.5" ></text>
</g>
<g >
<title>RnnLM::backward (43,243,959,131 samples, 11.25%)</title><rect x="1020.7" y="629" width="132.8" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="1023.72" y="639.5" >RnnLM::backward</text>
</g>
<g >
<title>Matrix::operator+ (772,977,929 samples, 0.20%)</title><rect x="1165.0" y="597" width="2.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1168.02" y="607.5" ></text>
</g>
<g >
<title>Matrix::Matrix (225,461,509 samples, 0.06%)</title><rect x="1162.3" y="597" width="0.7" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1165.35" y="607.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (1,127,383,407 samples, 0.29%)</title><rect x="978.9" y="661" width="3.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="981.87" y="671.5" ></text>
</g>
<g >
<title>irq_exit_rcu (32,738,729 samples, 0.01%)</title><rect x="894.3" y="613" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="897.35" y="623.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (257,607,770 samples, 0.07%)</title><rect x="994.4" y="677" width="0.8" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="997.41" y="687.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (257,663,622 samples, 0.07%)</title><rect x="974.8" y="661" width="0.8" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="977.82" y="671.5" ></text>
</g>
<g >
<title>Matrix::getShape (354,286,194 samples, 0.09%)</title><rect x="1017.5" y="613" width="1.0" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="1020.46" y="623.5" ></text>
</g>
<g >
<title>__asan::AsanThread::stack_top (64,400,191 samples, 0.02%)</title><rect x="1181.9" y="613" width="0.2" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="1184.89" y="623.5" ></text>
</g>
<g >
<title>allocTmpMatrix (547,584,400 samples, 0.14%)</title><rect x="1163.3" y="581" width="1.7" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1166.34" y="591.5" ></text>
</g>
<g >
<title>Matrix::Matrix (96,617,227 samples, 0.03%)</title><rect x="1044.9" y="549" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1047.92" y="559.5" ></text>
</g>
<g >
<title>Matrix::dot (19,715,366,780 samples, 5.13%)</title><rect x="901.4" y="629" width="60.6" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="904.44" y="639.5" >Matrix..</text>
</g>
<g >
<title>std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;::push_back (64,442,364 samples, 0.02%)</title><rect x="1184.1" y="629" width="0.2" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1187.07" y="639.5" ></text>
</g>
<g >
<title>hash_futex (96,612,503 samples, 0.03%)</title><rect x="967.3" y="533" width="0.3" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="970.30" y="543.5" ></text>
</g>
<g >
<title>[unknown] (257,616,090 samples, 0.07%)</title><rect x="972.6" y="549" width="0.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="975.64" y="559.5" ></text>
</g>
<g >
<title>__libc_start_main (61,101,377,095 samples, 15.90%)</title><rect x="996.7" y="677" width="187.6" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="999.69" y="687.5" >__libc_start_main</text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (354,361,086 samples, 0.09%)</title><rect x="982.3" y="661" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="985.33" y="671.5" ></text>
</g>
<g >
<title>Matrix::Matrix (96,625,216 samples, 0.03%)</title><rect x="1026.2" y="581" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1029.16" y="591.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotBase&lt;__sanitizer::StackDepotNode, 1, 20&gt;::Put (128,850,542 samples, 0.03%)</title><rect x="1188.6" y="677" width="0.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1191.62" y="687.5" ></text>
</g>
<g >
<title>Matrix::operator[] (161,057,263 samples, 0.04%)</title><rect x="1175.1" y="597" width="0.5" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1178.10" y="607.5" ></text>
</g>
<g >
<title>Matrix::operator[] (225,514,445 samples, 0.06%)</title><rect x="1167.4" y="597" width="0.7" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1170.39" y="607.5" ></text>
</g>
<g >
<title>[unknown] (257,616,090 samples, 0.07%)</title><rect x="972.6" y="501" width="0.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="975.64" y="511.5" ></text>
</g>
<g >
<title>[unknown] (64,401,527 samples, 0.02%)</title><rect x="972.6" y="37" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="975.64" y="47.5" ></text>
</g>
<g >
<title>[rnn] (64,420,688 samples, 0.02%)</title><rect x="1008.2" y="613" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1011.16" y="623.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (64,424,669 samples, 0.02%)</title><rect x="1180.3" y="597" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1183.31" y="607.5" ></text>
</g>
<g >
<title>Matrix::split (516,634,989 samples, 0.13%)</title><rect x="1025.2" y="613" width="1.6" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1028.17" y="623.5" ></text>
</g>
<g >
<title>__strpbrk_sse42 (289,859,016 samples, 0.08%)</title><rect x="988.2" y="661" width="0.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="991.17" y="671.5" ></text>
</g>
<g >
<title>__ieee754_pow_fma (1,223,943,236 samples, 0.32%)</title><rect x="1156.7" y="613" width="3.8" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1159.71" y="623.5" ></text>
</g>
<g >
<title>all (384,379,751,800 samples, 100%)</title><rect x="10.0" y="709" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="719.5" ></text>
</g>
<g >
<title>[libgomp.so.1.0.0] (4,801,477,060 samples, 1.25%)</title><rect x="10.0" y="677" width="14.7" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="13.00" y="687.5" ></text>
</g>
<g >
<title>[unknown] (257,616,090 samples, 0.07%)</title><rect x="972.6" y="405" width="0.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="975.64" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;CrosEntropyInfo, std::allocator&lt;CrosEntropyInfo&gt; &gt;::_M_realloc_insert&lt;CrosEntropyInfo const&amp;&gt; (96,680,093 samples, 0.03%)</title><rect x="1019.5" y="597" width="0.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1022.53" y="607.5" ></text>
</g>
<g >
<title>__sanitizer::CombinedAllocator&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&gt;, __sanitizer::SizeClassAllocatorLocalCache&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&gt; &gt;, __sanitizer::LargeMmapAllocator&lt;__asan::AsanMapUnmapCallback, __sanitizer::LargeMmapAllocatorPtrArrayDynamic&gt; &gt;::Allocate (257,687,030 samples, 0.07%)</title><rect x="1187.7" y="677" width="0.8" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1190.73" y="687.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned int&gt; (193,292,982 samples, 0.05%)</title><rect x="1033.1" y="581" width="0.6" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1036.09" y="591.5" ></text>
</g>
<g >
<title>allocTmpMatrix (128,813,095 samples, 0.03%)</title><rect x="1044.9" y="565" width="0.4" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1047.92" y="575.5" ></text>
</g>
<g >
<title>allocTmpMatrix (289,839,105 samples, 0.08%)</title><rect x="1166.5" y="581" width="0.9" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1169.50" y="591.5" ></text>
</g>
<g >
<title>[unknown] (225,414,485 samples, 0.06%)</title><rect x="972.6" y="293" width="0.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="975.64" y="303.5" ></text>
</g>
<g >
<title>[unknown] (257,616,090 samples, 0.07%)</title><rect x="972.6" y="597" width="0.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="975.64" y="607.5" ></text>
</g>
<g >
<title>operator delete (257,729,002 samples, 0.07%)</title><rect x="1182.7" y="613" width="0.8" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1185.68" y="623.5" ></text>
</g>
<g >
<title>[unknown] (128,807,203 samples, 0.03%)</title><rect x="972.6" y="133" width="0.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="975.64" y="143.5" ></text>
</g>
<g >
<title>operator delete[] (161,076,872 samples, 0.04%)</title><rect x="1181.2" y="597" width="0.5" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="1184.20" y="607.5" ></text>
</g>
<g >
<title>Matrix::tanh (901,913,010 samples, 0.23%)</title><rect x="1168.1" y="597" width="2.8" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1171.08" y="607.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotBase&lt;__sanitizer::StackDepotNode, 1, 20&gt;::find (322,166,721 samples, 0.08%)</title><rect x="1189.0" y="677" width="1.0" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1192.01" y="687.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (257,692,912 samples, 0.07%)</title><rect x="966.9" y="613" width="0.8" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="969.91" y="623.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;Matrix*&gt; &gt;::construct&lt;Matrix*, Matrix* const&amp;&gt; (96,600,640 samples, 0.03%)</title><rect x="1173.6" y="581" width="0.3" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="1176.62" y="591.5" ></text>
</g>
<g >
<title>[unknown] (257,616,090 samples, 0.07%)</title><rect x="972.6" y="517" width="0.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="975.64" y="527.5" ></text>
</g>
<g >
<title>Matrix::getShape (64,480,715 samples, 0.02%)</title><rect x="1019.9" y="629" width="0.2" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="1022.93" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;Matrix*, std::allocator&lt;Matrix*&gt; &gt;::_M_realloc_insert&lt;Matrix* const&amp;&gt; (64,428,371 samples, 0.02%)</title><rect x="1173.9" y="581" width="0.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1176.92" y="591.5" ></text>
</g>
<g >
<title>Matrix::checkShape (128,851,200 samples, 0.03%)</title><rect x="1082.2" y="581" width="0.4" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1085.21" y="591.5" ></text>
</g>
<g >
<title>Matrix::zero (64,411,694 samples, 0.02%)</title><rect x="1164.6" y="565" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1167.62" y="575.5" ></text>
</g>
<g >
<title>Matrix::zero (161,038,508 samples, 0.04%)</title><rect x="1028.5" y="565" width="0.5" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1031.54" y="575.5" ></text>
</g>
<g >
<title>Matrix::operator[] (257,744,988 samples, 0.07%)</title><rect x="1018.5" y="613" width="0.8" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1021.54" y="623.5" ></text>
</g>
<g >
<title>Matrix::operator[] (128,920,287 samples, 0.03%)</title><rect x="1034.9" y="581" width="0.4" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1037.87" y="591.5" ></text>
</g>
<g >
<title>Matrix::~Matrix (644,295,582 samples, 0.17%)</title><rect x="1179.7" y="613" width="2.0" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1182.72" y="623.5" ></text>
</g>
<g >
<title>main (61,101,377,095 samples, 15.90%)</title><rect x="996.7" y="661" width="187.6" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="999.69" y="671.5" >main</text>
</g>
<g >
<title>Adam::step (5,894,624,898 samples, 1.53%)</title><rect x="996.7" y="629" width="18.1" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="999.69" y="639.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (512,034,928 samples, 0.13%)</title><rect x="895.8" y="645" width="1.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="898.83" y="655.5" ></text>
</g>
<g >
<title>CrossEntropyLoss::backward (547,739,226 samples, 0.14%)</title><rect x="1014.8" y="629" width="1.7" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1017.79" y="639.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (1,384,971,144 samples, 0.36%)</title><rect x="967.8" y="613" width="4.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="970.80" y="623.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;::_M_realloc_insert&lt;unsigned int const&amp;&gt; (64,442,364 samples, 0.02%)</title><rect x="1184.1" y="613" width="0.2" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="1187.07" y="623.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::Unwind (64,417,728 samples, 0.02%)</title><rect x="1182.5" y="613" width="0.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1185.48" y="623.5" ></text>
</g>
<g >
<title>std::vector&lt;Matrix*, std::allocator&lt;Matrix*&gt; &gt;::push_back (64,444,916 samples, 0.02%)</title><rect x="1183.9" y="629" width="0.2" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="1186.87" y="639.5" ></text>
</g>
<g >
<title>__ieee754_pow_fma (1,062,935,090 samples, 0.28%)</title><rect x="1008.4" y="613" width="3.2" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1011.36" y="623.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_safe_stack (128,322,737 samples, 0.03%)</title><rect x="897.4" y="645" width="0.4" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="900.40" y="655.5" ></text>
</g>
<g >
<title>std::pow&lt;float, int&gt; (161,107,742 samples, 0.04%)</title><rect x="1013.8" y="613" width="0.5" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1016.80" y="623.5" ></text>
</g>
<g >
<title>[unknown] (128,807,203 samples, 0.03%)</title><rect x="972.6" y="69" width="0.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="975.64" y="79.5" ></text>
</g>
<g >
<title>Matrix::Matrix (193,232,075 samples, 0.05%)</title><rect x="1166.7" y="549" width="0.6" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1169.70" y="559.5" ></text>
</g>
<g >
<title>Matrix::operator* (612,829,426 samples, 0.16%)</title><rect x="1029.7" y="597" width="1.9" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1032.72" y="607.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (64,450,584 samples, 0.02%)</title><rect x="1170.4" y="533" width="0.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1173.36" y="543.5" ></text>
</g>
<g >
<title>__x64_sys_futex (257,159,045 samples, 0.07%)</title><rect x="896.6" y="597" width="0.8" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="899.61" y="607.5" ></text>
</g>
<g >
<title>std::vector&lt;CrosEntropyInfo, std::allocator&lt;CrosEntropyInfo&gt; &gt;::push_back (161,090,409 samples, 0.04%)</title><rect x="1019.3" y="613" width="0.5" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1022.34" y="623.5" ></text>
</g>
<g >
<title>Matrix::getShape (64,402,414 samples, 0.02%)</title><rect x="1003.2" y="597" width="0.2" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="1006.22" y="607.5" ></text>
</g>
<g >
<title>[unknown] (257,616,090 samples, 0.07%)</title><rect x="972.6" y="469" width="0.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="975.64" y="479.5" ></text>
</g>
<g >
<title>__sanitizer::RunMallocHooks (64,436,293 samples, 0.02%)</title><rect x="985.5" y="661" width="0.2" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="988.50" y="671.5" ></text>
</g>
<g >
<title>std::vector&lt;Matrix*, std::allocator&lt;Matrix*&gt; &gt;::push_back (193,234,046 samples, 0.05%)</title><rect x="1173.5" y="597" width="0.6" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="1176.52" y="607.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;CrosEntropyInfo, CrosEntropyInfo&gt; (64,475,378 samples, 0.02%)</title><rect x="1019.6" y="533" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1022.63" y="543.5" ></text>
</g>
<g >
<title>Matrix::dot (67,161,705,311 samples, 17.47%)</title><rect x="688.0" y="645" width="206.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="690.97" y="655.5" >Matrix::dot</text>
</g>
<g >
<title>[unknown] (128,807,203 samples, 0.03%)</title><rect x="972.6" y="101" width="0.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="975.64" y="111.5" ></text>
</g>
<g >
<title>std::pow&lt;float, int&gt; (96,650,688 samples, 0.03%)</title><rect x="1183.6" y="629" width="0.3" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1186.57" y="639.5" ></text>
</g>
<g >
<title>rnn (384,379,751,800 samples, 100.00%)</title><rect x="10.0" y="693" width="1180.0" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="13.00" y="703.5" >rnn</text>
</g>
<g >
<title>Matrix::zero (327,516,449 samples, 0.09%)</title><rect x="1080.0" y="549" width="1.0" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1083.02" y="559.5" ></text>
</g>
<g >
<title>[unknown] (161,006,280 samples, 0.04%)</title><rect x="972.6" y="181" width="0.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="975.64" y="191.5" ></text>
</g>
<g >
<title>[unknown] (257,616,090 samples, 0.07%)</title><rect x="972.6" y="389" width="0.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="975.64" y="399.5" ></text>
</g>
<g >
<title>Matrix::getShape (161,066,937 samples, 0.04%)</title><rect x="1015.2" y="613" width="0.5" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="1018.18" y="623.5" ></text>
</g>
<g >
<title>train (61,101,377,095 samples, 15.90%)</title><rect x="996.7" y="645" width="187.6" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="999.69" y="655.5" >train</text>
</g>
<g >
<title>RnnLM::forward (4,702,797,168 samples, 1.22%)</title><rect x="1161.3" y="629" width="14.4" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1164.26" y="639.5" ></text>
</g>
<g >
<title>Liner::backward (1,352,965,955 samples, 0.35%)</title><rect x="1020.7" y="613" width="4.2" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1023.72" y="623.5" ></text>
</g>
<g >
<title>allocTmpMatrix (96,645,722 samples, 0.03%)</title><rect x="1041.3" y="565" width="0.3" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1044.26" y="575.5" ></text>
</g>
<g >
<title>hash_futex (64,385,422 samples, 0.02%)</title><rect x="897.2" y="565" width="0.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="900.20" y="575.5" ></text>
</g>
<g >
<title>Matrix::checkShape (64,402,414 samples, 0.02%)</title><rect x="1003.2" y="613" width="0.2" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1006.22" y="623.5" ></text>
</g>
<g >
<title>[unknown] (128,807,203 samples, 0.03%)</title><rect x="972.6" y="85" width="0.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="975.64" y="95.5" ></text>
</g>
<g >
<title>Matrix::zero (128,854,470 samples, 0.03%)</title><rect x="1027.7" y="549" width="0.4" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1030.75" y="559.5" ></text>
</g>
<g >
<title>run_rebalance_domains (32,738,729 samples, 0.01%)</title><rect x="894.3" y="581" width="0.1" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="897.35" y="591.5" ></text>
</g>
<g >
<title>[unknown] (193,211,277 samples, 0.05%)</title><rect x="972.6" y="277" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="975.64" y="287.5" ></text>
</g>
<g >
<title>__asan::asan_delete (257,735,780 samples, 0.07%)</title><rect x="995.7" y="677" width="0.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="998.70" y="687.5" ></text>
</g>
<g >
<title>Parameters::inc_grad (23,084,112,005 samples, 6.01%)</title><rect x="1082.2" y="597" width="70.9" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1085.21" y="607.5" >Paramete..</text>
</g>
<g >
<title>[unknown] (161,006,280 samples, 0.04%)</title><rect x="972.6" y="213" width="0.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="975.64" y="223.5" ></text>
</g>
<g >
<title>__x64_sys_futex (161,062,641 samples, 0.04%)</title><rect x="967.2" y="565" width="0.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="970.20" y="575.5" ></text>
</g>
<g >
<title>[unknown] (314,122,408,504 samples, 81.72%)</title><rect x="24.7" y="677" width="964.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="27.74" y="687.5" >[unknown]</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (65,096,977 samples, 0.02%)</title><rect x="894.3" y="645" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="897.25" y="655.5" ></text>
</g>
<g >
<title>__asan::RZSize2Log (163,483,976 samples, 0.04%)</title><rect x="995.2" y="677" width="0.5" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="998.20" y="687.5" ></text>
</g>
<g >
<title>Matrix::Matrix (96,632,685 samples, 0.03%)</title><rect x="1002.9" y="613" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1005.92" y="623.5" ></text>
</g>
<g >
<title>allocTmpMatrix (128,868,061 samples, 0.03%)</title><rect x="1031.2" y="565" width="0.4" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1034.21" y="575.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;CrosEntropyInfo*, CrosEntropyInfo*, std::allocator&lt;CrosEntropyInfo&gt; &gt; (64,475,378 samples, 0.02%)</title><rect x="1019.6" y="549" width="0.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1022.63" y="559.5" ></text>
</g>
<g >
<title>Matrix::Matrix (391,958,812 samples, 0.10%)</title><rect x="1079.9" y="565" width="1.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1082.92" y="575.5" ></text>
</g>
<g >
<title>Matrix::operator[] (225,445,049 samples, 0.06%)</title><rect x="1165.8" y="581" width="0.7" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1168.81" y="591.5" ></text>
</g>
<g >
<title>[unknown] (257,616,090 samples, 0.07%)</title><rect x="972.6" y="485" width="0.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="975.64" y="495.5" ></text>
</g>
<g >
<title>std::pow&lt;double, int&gt; (96,618,980 samples, 0.03%)</title><rect x="1161.0" y="613" width="0.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1163.96" y="623.5" ></text>
</g>
<g >
<title>[unknown] (193,211,277 samples, 0.05%)</title><rect x="972.6" y="261" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="975.64" y="271.5" ></text>
</g>
<g >
<title>[unknown] (257,616,090 samples, 0.07%)</title><rect x="972.6" y="565" width="0.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="975.64" y="575.5" ></text>
</g>
<g >
<title>[unknown] (257,616,090 samples, 0.07%)</title><rect x="972.6" y="581" width="0.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="975.64" y="591.5" ></text>
</g>
<g >
<title>Matrix::operator[] (378,045,429 samples, 0.10%)</title><rect x="1155.4" y="613" width="1.1" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1158.35" y="623.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThread (96,623,343 samples, 0.03%)</title><rect x="975.9" y="661" width="0.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="978.91" y="671.5" ></text>
</g>
<g >
<title>Liner::forward (161,009,777 samples, 0.04%)</title><rect x="1161.3" y="613" width="0.5" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1164.26" y="623.5" ></text>
</g>
<g >
<title>Matrix::operator*= (225,472,301 samples, 0.06%)</title><rect x="1154.7" y="613" width="0.7" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1157.66" y="623.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned int&gt; (6,506,570,347 samples, 1.69%)</title><rect x="1129.6" y="565" width="20.0" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1132.64" y="575.5" ></text>
</g>
<g >
<title>[unknown] (23,515,949,787 samples, 6.12%)</title><rect x="901.3" y="661" width="72.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="904.34" y="671.5" >[unknown]</text>
</g>
<g >
<title>__asan::AsanTSDGet (64,420,624 samples, 0.02%)</title><rect x="1180.5" y="597" width="0.2" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="1183.51" y="607.5" ></text>
</g>
<g >
<title>[unknown] (257,616,090 samples, 0.07%)</title><rect x="972.6" y="453" width="0.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="975.64" y="463.5" ></text>
</g>
<g >
<title>__asan::PoisonShadow (387,040,541 samples, 0.10%)</title><rect x="976.3" y="661" width="1.2" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="979.30" y="671.5" ></text>
</g>
<g >
<title>[unknown] (193,211,277 samples, 0.05%)</title><rect x="972.6" y="245" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="975.64" y="255.5" ></text>
</g>
<g >
<title>Matrix::zero (96,674,626 samples, 0.03%)</title><rect x="1163.8" y="549" width="0.3" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1166.83" y="559.5" ></text>
</g>
<g >
<title>rebalance_domains (32,738,729 samples, 0.01%)</title><rect x="894.3" y="565" width="0.1" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="897.35" y="575.5" ></text>
</g>
<g >
<title>__memmove_sse2_unaligned_erms (96,611,854 samples, 0.03%)</title><rect x="1167.0" y="533" width="0.3" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1169.99" y="543.5" ></text>
</g>
<g >
<title>allocTmpMatrix (128,868,061 samples, 0.03%)</title><rect x="1031.2" y="581" width="0.4" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1034.21" y="591.5" ></text>
</g>
<g >
<title>Matrix::dot (837,446,948 samples, 0.22%)</title><rect x="1027.2" y="597" width="2.5" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1030.15" y="607.5" ></text>
</g>
<g >
<title>do_syscall_64 (354,074,569 samples, 0.09%)</title><rect x="896.3" y="629" width="1.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="899.31" y="639.5" ></text>
</g>
<g >
<title>[libgomp.so.1.0.0] (285,450,647,561 samples, 74.26%)</title><rect x="25.0" y="661" width="876.3" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="28.04" y="671.5" >[libgomp.so.1.0.0]</text>
</g>
<g >
<title>Matrix::operator[] (225,649,118 samples, 0.06%)</title><rect x="1015.7" y="613" width="0.7" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1018.68" y="623.5" ></text>
</g>
<g >
<title>Matrix::zero (96,623,907 samples, 0.03%)</title><rect x="1162.5" y="581" width="0.3" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1165.55" y="591.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (1,063,020,220 samples, 0.28%)</title><rect x="1184.5" y="677" width="3.2" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="1187.46" y="687.5" ></text>
</g>
<g >
<title>Matrix::operator+= (21,827,903,524 samples, 5.68%)</title><rect x="1082.6" y="581" width="67.0" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1085.61" y="591.5" >Matrix:..</text>
</g>
<g >
<title>pow@@GLIBC_2.29 (612,051,712 samples, 0.16%)</title><rect x="1011.9" y="613" width="1.9" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1014.92" y="623.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (96,615,308 samples, 0.03%)</title><rect x="966.6" y="613" width="0.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="969.61" y="623.5" ></text>
</g>
<g >
<title>__math_uflow (96,669,402 samples, 0.03%)</title><rect x="1011.6" y="613" width="0.3" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1014.62" y="623.5" ></text>
</g>
<g >
<title>Matrix::tanh_prime (3,402,355,404 samples, 0.89%)</title><rect x="1034.9" y="597" width="10.4" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="1037.87" y="607.5" ></text>
</g>
<g >
<title>[libm-2.31.so] (128,804,711 samples, 0.03%)</title><rect x="1007.8" y="613" width="0.4" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="1010.77" y="623.5" ></text>
</g>
<g >
<title>omp_get_num_threads (96,304,525 samples, 0.03%)</title><rect x="897.8" y="645" width="0.3" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="900.79" y="655.5" ></text>
</g>
<g >
<title>Matrix::operator[] (128,855,068 samples, 0.03%)</title><rect x="1025.6" y="597" width="0.4" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1028.57" y="607.5" ></text>
</g>
<g >
<title>Matrix::pow2 (1,115,286,577 samples, 0.29%)</title><rect x="1035.3" y="581" width="3.4" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="1038.26" y="591.5" ></text>
</g>
<g >
<title>Matrix::Matrix (96,645,722 samples, 0.03%)</title><rect x="1041.3" y="533" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1044.26" y="543.5" ></text>
</g>
<g >
<title>pow@@GLIBC_2.29 (161,171,912 samples, 0.04%)</title><rect x="1160.5" y="613" width="0.5" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1163.47" y="623.5" ></text>
</g>
<g >
<title>Matrix::operator[] (612,048,134 samples, 0.16%)</title><rect x="1022.9" y="581" width="1.9" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1025.90" y="591.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (386,474,332 samples, 0.10%)</title><rect x="977.5" y="661" width="1.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="980.49" y="671.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (64,416,869 samples, 0.02%)</title><rect x="1129.4" y="549" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1132.45" y="559.5" ></text>
</g>
<g >
<title>allocTmpMatrix (96,645,722 samples, 0.03%)</title><rect x="1041.3" y="549" width="0.3" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1044.26" y="559.5" ></text>
</g>
<g >
<title>[unknown] (257,616,090 samples, 0.07%)</title><rect x="972.6" y="437" width="0.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="975.64" y="447.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThread (64,400,613 samples, 0.02%)</title><rect x="994.2" y="677" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="997.21" y="687.5" ></text>
</g>
<g >
<title>RnnLM::clip_grad (2,536,221,876 samples, 0.66%)</title><rect x="1153.5" y="629" width="7.8" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="1156.47" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;CrosEntropyInfo, std::allocator&lt;CrosEntropyInfo&gt; &gt;::_S_do_relocate (64,475,378 samples, 0.02%)</title><rect x="1019.6" y="565" width="0.2" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1022.63" y="575.5" ></text>
</g>
<g >
<title>CrossEntropyLoss::forward (1,095,218,171 samples, 0.28%)</title><rect x="1016.5" y="629" width="3.3" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="1019.47" y="639.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (96,639,533 samples, 0.03%)</title><rect x="972.3" y="613" width="0.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="975.35" y="623.5" ></text>
</g>
<g >
<title>std::vector&lt;Matrix*, std::allocator&lt;Matrix*&gt; &gt;::_M_realloc_insert&lt;Matrix* const&amp;&gt; (64,444,916 samples, 0.02%)</title><rect x="1183.9" y="613" width="0.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1186.87" y="623.5" ></text>
</g>
<g >
<title>x64_sys_call (257,159,045 samples, 0.07%)</title><rect x="896.6" y="613" width="0.8" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="899.61" y="623.5" ></text>
</g>
<g >
<title>allocTmpMatrix (289,839,105 samples, 0.08%)</title><rect x="1166.5" y="565" width="0.9" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1169.50" y="575.5" ></text>
</g>
<g >
<title>Matrix::zero (193,338,540 samples, 0.05%)</title><rect x="1081.1" y="565" width="0.6" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1084.12" y="575.5" ></text>
</g>
<g >
<title>[unknown] (257,616,090 samples, 0.07%)</title><rect x="972.6" y="421" width="0.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="975.64" y="431.5" ></text>
</g>
<g >
<title>allocTmpMatrix (161,054,188 samples, 0.04%)</title><rect x="1170.4" y="565" width="0.5" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1173.36" y="575.5" ></text>
</g>
<g >
<title>Matrix::transpose (869,796,289 samples, 0.23%)</title><rect x="1022.2" y="597" width="2.7" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1025.20" y="607.5" ></text>
</g>
<g >
<title>allocTmpMatrix (128,871,541 samples, 0.03%)</title><rect x="1038.1" y="549" width="0.4" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1041.09" y="559.5" ></text>
</g>
<g >
<title>x64_sys_call (161,062,641 samples, 0.04%)</title><rect x="967.2" y="581" width="0.5" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="970.20" y="591.5" ></text>
</g>
<g >
<title>[unknown] (257,616,090 samples, 0.07%)</title><rect x="972.6" y="533" width="0.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="975.64" y="543.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (65,096,977 samples, 0.02%)</title><rect x="894.3" y="629" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="897.25" y="639.5" ></text>
</g>
<g >
<title>Matrix::operator[] (386,566,675 samples, 0.10%)</title><rect x="1033.7" y="597" width="1.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1036.68" y="607.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (96,674,626 samples, 0.03%)</title><rect x="1163.8" y="533" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1166.83" y="543.5" ></text>
</g>
<g >
<title>__asan::PoisonShadow (289,859,016 samples, 0.08%)</title><rect x="988.2" y="645" width="0.9" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="991.17" y="655.5" ></text>
</g>
<g >
<title>[unknown] (225,414,485 samples, 0.06%)</title><rect x="972.6" y="373" width="0.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="975.64" y="383.5" ></text>
</g>
<g >
<title>Shape::size (96,616,337 samples, 0.03%)</title><rect x="1164.1" y="549" width="0.3" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="1167.13" y="559.5" ></text>
</g>
<g >
<title>Matrix::tanh (934,162,988 samples, 0.24%)</title><rect x="1038.7" y="581" width="2.9" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1041.69" y="591.5" ></text>
</g>
<g >
<title>operator new (96,620,637 samples, 0.03%)</title><rect x="1081.8" y="565" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1084.82" y="575.5" ></text>
</g>
<g >
<title>Matrix::sum (354,298,908 samples, 0.09%)</title><rect x="1021.1" y="597" width="1.1" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1024.12" y="607.5" ></text>
</g>
<g >
<title>allocTmpMatrix (161,054,188 samples, 0.04%)</title><rect x="1170.4" y="581" width="0.5" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1173.36" y="591.5" ></text>
</g>
<g >
<title>__tanh (96,636,151 samples, 0.03%)</title><rect x="1043.8" y="581" width="0.3" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="1046.83" y="591.5" ></text>
</g>
<g >
<title>allocTmpMatrix (193,245,496 samples, 0.05%)</title><rect x="1026.1" y="597" width="0.6" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1029.06" y="607.5" ></text>
</g>
<g >
<title>Matrix::operator[] (289,845,859 samples, 0.08%)</title><rect x="1030.3" y="581" width="0.9" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1033.32" y="591.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (64,416,869 samples, 0.02%)</title><rect x="1129.4" y="565" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1132.45" y="575.5" ></text>
</g>
<g >
<title>Matrix::dot (98,336,323 samples, 0.03%)</title><rect x="24.7" y="661" width="0.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="27.74" y="671.5" ></text>
</g>
<g >
<title>do_futex (128,864,663 samples, 0.03%)</title><rect x="967.2" y="549" width="0.4" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="970.20" y="559.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (417,123,582 samples, 0.11%)</title><rect x="894.5" y="645" width="1.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="897.55" y="655.5" ></text>
</g>
<g >
<title>std::vector&lt;CrosEntropyInfo, std::allocator&lt;CrosEntropyInfo&gt; &gt;::_S_relocate (64,475,378 samples, 0.02%)</title><rect x="1019.6" y="581" width="0.2" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="1022.63" y="591.5" ></text>
</g>
<g >
<title>__ieee754_exp_fma (161,096,111 samples, 0.04%)</title><rect x="1175.9" y="629" width="0.5" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1178.89" y="639.5" ></text>
</g>
<g >
<title>[unknown] (483,095,079 samples, 0.13%)</title><rect x="972.0" y="645" width="1.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="975.05" y="655.5" ></text>
</g>
<g >
<title>__pthread_getspecific (611,968,936 samples, 0.16%)</title><rect x="983.4" y="661" width="1.9" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="986.42" y="671.5" ></text>
</g>
<g >
<title>[unknown] (161,006,280 samples, 0.04%)</title><rect x="972.6" y="165" width="0.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="975.64" y="175.5" ></text>
</g>
<g >
<title>Matrix::operator[] (193,235,259 samples, 0.05%)</title><rect x="1020.1" y="629" width="0.6" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1023.13" y="639.5" ></text>
</g>
<g >
<title>[unknown] (225,414,485 samples, 0.06%)</title><rect x="972.6" y="357" width="0.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="975.64" y="367.5" ></text>
</g>
<g >
<title>Matrix::operator[] (1,417,320,371 samples, 0.37%)</title><rect x="1003.4" y="613" width="4.4" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1006.41" y="623.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (64,395,750 samples, 0.02%)</title><rect x="1028.7" y="549" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1031.73" y="559.5" ></text>
</g>
<g >
<title>Matrix::operator[] (96,617,263 samples, 0.03%)</title><rect x="1155.1" y="597" width="0.3" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1158.06" y="607.5" ></text>
</g>
<g >
<title>[unknown] (96,608,133 samples, 0.03%)</title><rect x="972.6" y="53" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="975.64" y="63.5" ></text>
</g>
<g >
<title>[unknown] (193,211,277 samples, 0.05%)</title><rect x="972.6" y="229" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="975.64" y="239.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (230,902,328 samples, 0.06%)</title><rect x="1080.3" y="533" width="0.7" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1083.32" y="543.5" ></text>
</g>
<g >
<title>Matrix::Matrix (64,458,849 samples, 0.02%)</title><rect x="1038.1" y="533" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1041.09" y="543.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (64,402,458 samples, 0.02%)</title><rect x="1081.5" y="549" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1084.52" y="559.5" ></text>
</g>
<g >
<title>Matrix::operator[] (289,898,993 samples, 0.08%)</title><rect x="1021.2" y="581" width="0.9" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1024.21" y="591.5" ></text>
</g>
<g >
<title>[unknown] (225,414,485 samples, 0.06%)</title><rect x="972.6" y="325" width="0.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="975.64" y="335.5" ></text>
</g>
<g >
<title>Matrix::operator[] (96,670,272 samples, 0.03%)</title><rect x="1020.8" y="597" width="0.3" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1023.82" y="607.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (64,418,071 samples, 0.02%)</title><rect x="1028.5" y="549" width="0.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1031.54" y="559.5" ></text>
</g>
<g >
<title>GOMP_parallel (23,032,854,708 samples, 5.99%)</title><rect x="901.3" y="645" width="70.7" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="904.34" y="655.5" >GOMP_pa..</text>
</g>
<g >
<title>futex_wake (64,345,505 samples, 0.02%)</title><rect x="897.0" y="565" width="0.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="900.00" y="575.5" ></text>
</g>
</g>
</svg>
