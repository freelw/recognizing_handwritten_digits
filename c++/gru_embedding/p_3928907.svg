<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="438" onload="init(evt)" viewBox="0 0 1200 438" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="438.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="421" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="421" > </text>
<g id="frames">
<g >
<title>__do_munmap (2,572,482,334 samples, 0.46%)</title><rect x="1063.5" y="245" width="5.4" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1066.48" y="255.5" ></text>
</g>
<g >
<title>prep_new_page (124,482,168 samples, 0.02%)</title><rect x="1062.7" y="181" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1065.71" y="191.5" ></text>
</g>
<g >
<title>cgroup_post_fork (61,674,051 samples, 0.01%)</title><rect x="1060.2" y="213" width="0.1" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="1063.15" y="223.5" ></text>
</g>
<g >
<title>__vm_munmap (2,572,482,334 samples, 0.46%)</title><rect x="1063.5" y="261" width="5.4" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="1066.48" y="271.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (98,703,213 samples, 0.02%)</title><rect x="1066.8" y="101" width="0.2" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="1069.82" y="111.5" ></text>
</g>
<g >
<title>[libgomp.so.1.0.0] (6,318,308,335 samples, 1.12%)</title><rect x="1046.4" y="341" width="13.3" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1049.44" y="351.5" ></text>
</g>
<g >
<title>get_page_from_freelist (244,713,727 samples, 0.04%)</title><rect x="1062.6" y="197" width="0.6" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1065.65" y="207.5" ></text>
</g>
<g >
<title>[gru] (70,190,035 samples, 0.01%)</title><rect x="947.1" y="357" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="950.12" y="367.5" ></text>
</g>
<g >
<title>handle_mm_fault (398,906,053 samples, 0.07%)</title><rect x="1062.4" y="277" width="0.8" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1065.38" y="287.5" ></text>
</g>
<g >
<title>rcu_core (735,407,698 samples, 0.13%)</title><rect x="929.7" y="261" width="1.6" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="932.75" y="271.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (93,391,839 samples, 0.02%)</title><rect x="929.6" y="309" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="932.55" y="319.5" ></text>
</g>
<g >
<title>autograd::CrossEntropyEdge::backward (22,891,523,338 samples, 4.06%)</title><rect x="1095.2" y="357" width="47.9" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1098.16" y="367.5" >auto..</text>
</g>
<g >
<title>schedule_tail (156,626,141 samples, 0.03%)</title><rect x="1060.6" y="309" width="0.3" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1063.61" y="319.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (389,321,443 samples, 0.07%)</title><rect x="1067.7" y="69" width="0.8" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1070.71" y="79.5" ></text>
</g>
<g >
<title>Matrix::operator+= (552,407,376 samples, 0.10%)</title><rect x="932.9" y="357" width="1.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="935.93" y="367.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (218,985,648 samples, 0.04%)</title><rect x="1061.2" y="341" width="0.5" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1064.20" y="351.5" ></text>
</g>
<g >
<title>unmap_single_vma (2,572,482,334 samples, 0.46%)</title><rect x="1063.5" y="197" width="5.4" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1066.48" y="207.5" ></text>
</g>
<g >
<title>Matrix::sum (594,960,337 samples, 0.11%)</title><rect x="945.9" y="357" width="1.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="948.88" y="367.5" ></text>
</g>
<g >
<title>zap_pte_range.isra.0 (2,506,894,283 samples, 0.44%)</title><rect x="1063.6" y="165" width="5.3" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1066.62" y="175.5" ></text>
</g>
<g >
<title>[unknown] (60,016,008 samples, 0.01%)</title><rect x="1059.7" y="293" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1062.75" y="303.5" ></text>
</g>
<g >
<title>all (563,776,356,217 samples, 100%)</title><rect x="10.0" y="389" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="399.5" ></text>
</g>
<g >
<title>__x64_sys_clone (278,875,080 samples, 0.05%)</title><rect x="1060.0" y="277" width="0.6" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1063.02" y="287.5" ></text>
</g>
<g >
<title>__mod_node_page_state (130,888,563 samples, 0.02%)</title><rect x="1064.8" y="101" width="0.3" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1067.84" y="111.5" ></text>
</g>
<g >
<title>Matrix::getShape (773,942,701 samples, 0.14%)</title><rect x="931.3" y="357" width="1.6" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="934.31" y="367.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (68,216,034 samples, 0.01%)</title><rect x="1033.0" y="325" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1035.97" y="335.5" ></text>
</g>
<g >
<title>__handle_mm_fault (372,136,825 samples, 0.07%)</title><rect x="1062.4" y="261" width="0.8" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1065.38" y="271.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (65,883,710 samples, 0.01%)</title><rect x="1066.9" y="85" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1069.89" y="95.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (57,376,386 samples, 0.01%)</title><rect x="1046.3" y="309" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1049.32" y="319.5" ></text>
</g>
<g >
<title>__ieee754_pow_fma (60,016,008 samples, 0.01%)</title><rect x="1059.7" y="277" width="0.2" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1062.75" y="287.5" ></text>
</g>
<g >
<title>page_remove_rmap (748,274,808 samples, 0.13%)</title><rect x="1063.9" y="149" width="1.6" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1066.89" y="159.5" ></text>
</g>
<g >
<title>free_unref_page_list (520,061,463 samples, 0.09%)</title><rect x="1067.4" y="101" width="1.1" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1070.44" y="111.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (587,023,276 samples, 0.10%)</title><rect x="1064.0" y="133" width="1.3" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="1067.02" y="143.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (1,563,917,639 samples, 0.28%)</title><rect x="1065.5" y="133" width="3.2" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1068.46" y="143.5" ></text>
</g>
<g >
<title>css_set_move_task (61,674,051 samples, 0.01%)</title><rect x="1060.2" y="197" width="0.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1063.15" y="207.5" ></text>
</g>
<g >
<title>exc_page_fault (63,735,657 samples, 0.01%)</title><rect x="1061.5" y="309" width="0.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1064.53" y="319.5" ></text>
</g>
<g >
<title>do_syscall_64 (278,875,080 samples, 0.05%)</title><rect x="1060.0" y="309" width="0.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1063.02" y="319.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (2,572,482,334 samples, 0.46%)</title><rect x="1063.5" y="277" width="5.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1066.48" y="287.5" ></text>
</g>
<g >
<title>free_event_rcu (735,407,698 samples, 0.13%)</title><rect x="929.7" y="245" width="1.6" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="932.75" y="255.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (63,166,436 samples, 0.01%)</title><rect x="1062.5" y="229" width="0.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1065.52" y="239.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (156,626,141 samples, 0.03%)</title><rect x="1060.6" y="229" width="0.3" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="1063.61" y="239.5" ></text>
</g>
<g >
<title>[unknown] (134,228,202 samples, 0.02%)</title><rect x="1059.7" y="341" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1062.67" y="351.5" ></text>
</g>
<g >
<title>do_user_addr_fault (398,906,053 samples, 0.07%)</title><rect x="1062.4" y="293" width="0.8" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1065.38" y="303.5" ></text>
</g>
<g >
<title>[unknown] (60,016,008 samples, 0.01%)</title><rect x="1059.7" y="309" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1062.75" y="319.5" ></text>
</g>
<g >
<title>__irqentry_text_end (60,432,216 samples, 0.01%)</title><rect x="1062.1" y="325" width="0.1" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="1065.06" y="335.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (833,904,297 samples, 0.15%)</title><rect x="929.6" y="325" width="1.7" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="932.55" y="335.5" ></text>
</g>
<g >
<title>copy_process (278,875,080 samples, 0.05%)</title><rect x="1060.0" y="229" width="0.6" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1063.02" y="239.5" ></text>
</g>
<g >
<title>do_user_addr_fault (63,735,657 samples, 0.01%)</title><rect x="1061.5" y="293" width="0.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1064.53" y="303.5" ></text>
</g>
<g >
<title>inherit_task_group.isra.0 (125,188,663 samples, 0.02%)</title><rect x="1060.3" y="197" width="0.3" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="1063.34" y="207.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (170,046,503 samples, 0.03%)</title><rect x="1059.2" y="309" width="0.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1062.24" y="319.5" ></text>
</g>
<g >
<title>tick_sched_handle.isra.0 (64,105,208 samples, 0.01%)</title><rect x="929.6" y="245" width="0.1" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="932.55" y="255.5" ></text>
</g>
<g >
<title>tick_sched_timer (64,105,208 samples, 0.01%)</title><rect x="929.6" y="261" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="932.55" y="271.5" ></text>
</g>
<g >
<title>__mod_zone_page_state (65,743,506 samples, 0.01%)</title><rect x="1068.4" y="37" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1071.39" y="47.5" ></text>
</g>
<g >
<title>Matrix::transpose (6,204,529,503 samples, 1.10%)</title><rect x="1033.5" y="341" width="12.9" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1036.46" y="351.5" ></text>
</g>
<g >
<title>__expf_fma (96,414,159 samples, 0.02%)</title><rect x="1061.0" y="341" width="0.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1064.00" y="351.5" ></text>
</g>
<g >
<title>[libgomp.so.1.0.0] (41,060,469,329 samples, 7.28%)</title><rect x="947.3" y="357" width="85.9" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="950.27" y="367.5" >[libgomp.s..</text>
</g>
<g >
<title>lock_page_memcg (98,281,964 samples, 0.02%)</title><rect x="1065.3" y="133" width="0.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="1068.25" y="143.5" ></text>
</g>
<g >
<title>native_write_msr (156,626,141 samples, 0.03%)</title><rect x="1060.6" y="213" width="0.3" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1063.61" y="223.5" ></text>
</g>
<g >
<title>irq_exit_rcu (735,407,698 samples, 0.13%)</title><rect x="929.7" y="309" width="1.6" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="932.75" y="319.5" ></text>
</g>
<g >
<title>__mod_zone_page_state (65,025,992 samples, 0.01%)</title><rect x="1065.5" y="117" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1068.46" y="127.5" ></text>
</g>
<g >
<title>inherit_event.isra.0 (125,188,663 samples, 0.02%)</title><rect x="1060.3" y="181" width="0.3" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1063.34" y="191.5" ></text>
</g>
<g >
<title>perf_event_init_task (125,188,663 samples, 0.02%)</title><rect x="1060.3" y="213" width="0.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1063.34" y="223.5" ></text>
</g>
<g >
<title>autograd::CatEdge::backward (1,090,372,076 samples, 0.19%)</title><rect x="1092.9" y="357" width="2.3" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1095.88" y="367.5" ></text>
</g>
<g >
<title>free_unref_page_commit.isra.0 (454,973,580 samples, 0.08%)</title><rect x="1067.6" y="85" width="0.9" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1070.57" y="95.5" ></text>
</g>
<g >
<title>perf_try_init_event (94,544,101 samples, 0.02%)</title><rect x="1060.4" y="149" width="0.2" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="1063.41" y="159.5" ></text>
</g>
<g >
<title>rcu_core_si (735,407,698 samples, 0.13%)</title><rect x="929.7" y="277" width="1.6" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="932.75" y="287.5" ></text>
</g>
<g >
<title>unmap_region (2,572,482,334 samples, 0.46%)</title><rect x="1063.5" y="229" width="5.4" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1066.48" y="239.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.0 (156,626,141 samples, 0.03%)</title><rect x="1060.6" y="261" width="0.3" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1063.61" y="271.5" ></text>
</g>
<g >
<title>free_pcp_prepare (64,735,667 samples, 0.01%)</title><rect x="1067.3" y="101" width="0.1" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="1070.30" y="111.5" ></text>
</g>
<g >
<title>free_pcp_prepare (65,087,883 samples, 0.01%)</title><rect x="1067.4" y="85" width="0.2" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="1070.44" y="95.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (278,875,080 samples, 0.05%)</title><rect x="1060.0" y="325" width="0.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1063.02" y="335.5" ></text>
</g>
<g >
<title>[unknown] (60,016,008 samples, 0.01%)</title><rect x="1059.7" y="325" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1062.75" y="335.5" ></text>
</g>
<g >
<title>x64_sys_call (2,572,482,334 samples, 0.46%)</title><rect x="1063.5" y="293" width="5.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1066.48" y="303.5" ></text>
</g>
<g >
<title>[unknown] (17,036,551,329 samples, 3.02%)</title><rect x="1033.2" y="357" width="35.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1036.21" y="367.5" >[un..</text>
</g>
<g >
<title>alloc_pages_vma (244,713,727 samples, 0.04%)</title><rect x="1062.6" y="229" width="0.6" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1065.65" y="239.5" ></text>
</g>
<g >
<title>kernel_clone (278,875,080 samples, 0.05%)</title><rect x="1060.0" y="245" width="0.6" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="1063.02" y="255.5" ></text>
</g>
<g >
<title>x86_pmu_enable (156,626,141 samples, 0.03%)</title><rect x="1060.6" y="245" width="0.3" height="15.0" fill="rgb(244,179,43)" rx="2" ry="2" />
<text  x="1063.61" y="255.5" ></text>
</g>
<g >
<title>clear_page_erms (124,482,168 samples, 0.02%)</title><rect x="1062.7" y="165" width="0.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1065.71" y="175.5" ></text>
</g>
<g >
<title>x64_sys_call (278,875,080 samples, 0.05%)</title><rect x="1060.0" y="293" width="0.6" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1063.02" y="303.5" ></text>
</g>
<g >
<title>Matrix::operator[] (5,633,069,543 samples, 1.00%)</title><rect x="934.1" y="357" width="11.8" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="937.09" y="367.5" ></text>
</g>
<g >
<title>unmap_vmas (2,572,482,334 samples, 0.46%)</title><rect x="1063.5" y="213" width="5.4" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1066.48" y="223.5" ></text>
</g>
<g >
<title>Matrix::at (440,180,092,657 samples, 78.08%)</title><rect x="10.0" y="357" width="921.3" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="13.00" y="367.5" >Matrix::at</text>
</g>
<g >
<title>__alloc_pages (244,713,727 samples, 0.04%)</title><rect x="1062.6" y="213" width="0.6" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1065.65" y="223.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (169,637,818 samples, 0.03%)</title><rect x="1059.2" y="277" width="0.4" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1062.24" y="287.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (391,252,560 samples, 0.07%)</title><rect x="1064.3" y="117" width="0.8" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="1067.30" y="127.5" ></text>
</g>
<g >
<title>rmqueue (91,614,828 samples, 0.02%)</title><rect x="1063.0" y="181" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1065.97" y="191.5" ></text>
</g>
<g >
<title>free_unref_page_prepare.part.0 (65,793,028 samples, 0.01%)</title><rect x="1068.5" y="101" width="0.2" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="1071.52" y="111.5" ></text>
</g>
<g >
<title>handle_mm_fault (63,735,657 samples, 0.01%)</title><rect x="1061.5" y="277" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1064.53" y="287.5" ></text>
</g>
<g >
<title>exc_page_fault (430,845,283 samples, 0.08%)</title><rect x="1062.4" y="309" width="0.9" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1065.38" y="319.5" ></text>
</g>
<g >
<title>__mem_cgroup_uncharge_list (98,712,777 samples, 0.02%)</title><rect x="1066.6" y="101" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1069.62" y="111.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (93,391,839 samples, 0.02%)</title><rect x="929.6" y="293" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="932.55" y="303.5" ></text>
</g>
<g >
<title>hsw_hw_config (62,142,994 samples, 0.01%)</title><rect x="1060.5" y="117" width="0.1" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1063.48" y="127.5" ></text>
</g>
<g >
<title>__mod_zone_page_state (65,717,696 samples, 0.01%)</title><rect x="1067.1" y="101" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1070.09" y="111.5" ></text>
</g>
<g >
<title>finish_task_switch (156,626,141 samples, 0.03%)</title><rect x="1060.6" y="293" width="0.3" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1063.61" y="303.5" ></text>
</g>
<g >
<title>__free_one_page (259,991,772 samples, 0.05%)</title><rect x="1068.0" y="53" width="0.5" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1070.98" y="63.5" ></text>
</g>
<g >
<title>__do_sys_clone (278,875,080 samples, 0.05%)</title><rect x="1060.0" y="261" width="0.6" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="1063.02" y="271.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (154,952,630 samples, 0.03%)</title><rect x="1061.3" y="325" width="0.4" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1064.34" y="335.5" ></text>
</g>
<g >
<title>gru (563,776,356,217 samples, 100.00%)</title><rect x="10.0" y="373" width="1180.0" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="13.00" y="383.5" >gru</text>
</g>
<g >
<title>autograd::CrossEntropyLoss (22,418,065,479 samples, 3.98%)</title><rect x="1143.1" y="357" width="46.9" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1146.07" y="367.5" >auto..</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (68,216,034 samples, 0.01%)</title><rect x="1033.0" y="341" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1035.97" y="351.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (170,046,503 samples, 0.03%)</title><rect x="1059.2" y="325" width="0.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1062.24" y="335.5" ></text>
</g>
<g >
<title>x86_pmu_event_init (94,544,101 samples, 0.02%)</title><rect x="1060.4" y="133" width="0.2" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="1063.41" y="143.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2,572,482,334 samples, 0.46%)</title><rect x="1063.5" y="325" width="5.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1066.48" y="335.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (524,625,836 samples, 0.09%)</title><rect x="1062.2" y="325" width="1.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1065.19" y="335.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (1,596,107,801 samples, 0.28%)</title><rect x="1065.5" y="149" width="3.3" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="1068.46" y="159.5" ></text>
</g>
<g >
<title>do_anonymous_page (340,446,482 samples, 0.06%)</title><rect x="1062.4" y="245" width="0.8" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1065.45" y="255.5" ></text>
</g>
<g >
<title>__expf_fma (11,401,733,846 samples, 2.02%)</title><rect x="1068.9" y="357" width="23.8" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1071.87" y="367.5" >_..</text>
</g>
<g >
<title>__memset_avx2_erms (869,109,088 samples, 0.15%)</title><rect x="1061.7" y="341" width="1.8" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1064.66" y="351.5" ></text>
</g>
<g >
<title>__clone (470,522,001 samples, 0.08%)</title><rect x="1060.0" y="341" width="1.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1063.02" y="351.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (169,637,818 samples, 0.03%)</title><rect x="1059.2" y="293" width="0.4" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1062.24" y="303.5" ></text>
</g>
<g >
<title>release_pages (1,498,891,647 samples, 0.27%)</title><rect x="1065.6" y="117" width="3.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1068.59" y="127.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (57,376,386 samples, 0.01%)</title><rect x="1046.3" y="325" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1049.32" y="335.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (64,105,208 samples, 0.01%)</title><rect x="929.6" y="277" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="932.55" y="287.5" ></text>
</g>
<g >
<title>__munmap (2,572,482,334 samples, 0.46%)</title><rect x="1063.5" y="341" width="5.4" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="1066.48" y="351.5" ></text>
</g>
<g >
<title>do_syscall_64 (2,572,482,334 samples, 0.46%)</title><rect x="1063.5" y="309" width="5.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1066.48" y="319.5" ></text>
</g>
<g >
<title>cgroup_rstat_updated (65,213,447 samples, 0.01%)</title><rect x="1064.7" y="85" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1067.70" y="95.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (862,967,137 samples, 0.15%)</title><rect x="929.5" y="341" width="1.8" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="932.49" y="351.5" ></text>
</g>
<g >
<title>perf_event_alloc (125,188,663 samples, 0.02%)</title><rect x="1060.3" y="165" width="0.3" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1063.34" y="175.5" ></text>
</g>
<g >
<title>ret_from_fork (156,709,796 samples, 0.03%)</title><rect x="1060.6" y="325" width="0.3" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1063.61" y="335.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (194,901,097 samples, 0.03%)</title><rect x="1064.4" y="101" width="0.4" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1067.43" y="111.5" ></text>
</g>
<g >
<title>unmap_page_range (2,572,482,334 samples, 0.46%)</title><rect x="1063.5" y="181" width="5.4" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1066.48" y="191.5" ></text>
</g>
<g >
<title>uncharge_page (98,712,777 samples, 0.02%)</title><rect x="1066.6" y="85" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1069.62" y="95.5" ></text>
</g>
<g >
<title>handle_softirqs (735,407,698 samples, 0.13%)</title><rect x="929.7" y="293" width="1.6" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="932.75" y="303.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (156,626,141 samples, 0.03%)</title><rect x="1060.6" y="277" width="0.3" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1063.61" y="287.5" ></text>
</g>
</g>
</svg>
